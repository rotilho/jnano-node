package com.rotilho.jnano.node.codec.vote

import com.rotilho.jnano.commons.NanoHelper
import com.rotilho.jnano.node.Environment
import com.rotilho.jnano.node.Node
import com.rotilho.jnano.node.codec.network.PacketType
import com.rotilho.jnano.node.codec.network.TCPCodec
import com.rotilho.jnano.node.vote.Vote
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Assertions.assertTrue
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.Arguments
import org.junit.jupiter.params.provider.MethodSource
import java.net.InetAddress
import java.net.InetSocketAddress
import java.util.stream.Stream

internal class VoteCodecTest {
    private val node = Node(InetSocketAddress(InetAddress.getLocalHost(), 7050), Environment.LIVE, 13)

    @ParameterizedTest
    @MethodSource("providers")
    fun `Should decode and encode vote`(type: PacketType, encoded: String) {
        val codec = TCPCodec(type, node, VoteCodec())

        val decoded = codec.decode(node.protocolVersion, NanoHelper.toByteArray(encoded))!! as Vote

        assertTrue(decoded.isValid())
        assertEquals(encoded, NanoHelper.toHex(codec.encode(node.protocolVersion, decoded)!!))
    }

    companion object {
        @JvmStatic
        fun providers(): Stream<Arguments> {
            return Stream.of(
                Arguments.of(
                    PacketType.CONFIRM_ACKNOWLEDGE,
                    "52430D0D0D050011A30E0A32ED41C8607AA9212843392E853FCBCB4E7CB194E35C94F07F91DE59EF1E03A318E8174596EBBADAF10583EF33D430FEBD08694FD9497281BEFB2E26949350BF04C2A969D485AF49610DBA7DB3082156384CB2653E534618507D43090171357E5F0100000074EF7D2449C8B6D060AF77FEA58D1CBF6B6625FFD932A4EFBB9ACCB06AE8F1B6"
                ),
                Arguments.of(
                    PacketType.CONFIRM_ACKNOWLEDGE,
                    "52430D0D0D050021D0B2F149A13865A9F328A39335AD8AD7E04CE149258C767DA21C5DA116102899DEE0D5EF654A65A5AB4C064DB4AD61B0744A6F42D4FDF688155C4942C039E7708FBC830127FB3FE8AF1ACDA193052FF72D2A25E5FCEF3A0176BC433BFBA6A80F053523090000000074EF7D2449C8B6D060AF77FEA58D1CBF6B6625FFD932A4EFBB9ACCB06AE8F1B6D1AF08353C2600B2C4887834D82F7F62D864FB82924F1FD591061E7EE770821652431212120500212994D330022A052DF83E10FCE1B3E140496CDCD7E0C0F2FF6DE2670291B8801190BEDF00AA7F4BA2C6DBBEBA84B7B1E0FFEB0F854C779029BD5DA21F5D4FAF92F866324D5C822ADE01C3E294A05EB058451A75434B45113D89DD5B028EBEE80C3C29FD7A0000000074EF7D2449C8B6D060AF77FEA58D1CBF6B6625FFD932A4EFBB9ACCB06AE8F1B6D1AF08353C2600B2C4887834D82F7F62D864FB82924F1FD591061E7EE77082165243121212050011475D1D8C0103F1D6E5F14F36074E1CE8B4788A3694555C4C4286F799C9D57E7ADBA72F5450A3815E8D6C898E565E79BD1C1F496DD932A89B75676006FCA8F71637EDA3706F27079D9D37D17F2D45459B046675A4B98759C4BDCC72367B87AD04A79A9D1F00000000004D58DB0FCAB11B30ECE14C86D87977239AB67A520081D0CD53BF9BB3C44E65"
                ),
                Arguments.of(
                    PacketType.CONFIRM_ACKNOWLEDGE,

                )
            )
        }

    }
}